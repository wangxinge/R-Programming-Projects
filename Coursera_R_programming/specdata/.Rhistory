#w1 下调模块 AUC
w2 <- names(which(M6>=0.5));
#w2 上调模块 AUC
wt1 <- t2[which(t2[,5] %in% w1),];
#wt1 下调模块基因对
wt2 <- t2[which(t2[,5] %in% w2),];
#wt2 上调模块基因对
#上下调模块中基因的PCC值在癌症和正常样本中的分布
wt1 <- cbind(wt1,AUC=M6[wt1[,5]]);
wt2 <- cbind(wt2,AUC=M6[wt2[,5]]);
wt1 <- cbind(wt1,t(M9[1,wt1[,1]]));
wt2 <- cbind(wt2,t(M9[1,wt2[,1]]));
wt1[1:10,]
range(wt1[,7])
wt1_order <- wt1[order(wt1[,7]),];
wt1_order[1:10,]
wt1_order <- wt1[order(wt1[,6]),];
wt1_order[1:10,]
cc <- brewer.pal(8,"Set3");
wt1_order <- wt1[order(wt1[,6]),];
wt1_order <- wt1[order(wt1[,5]),];
wt1_order[1:10,]
wt2_order <- wt2[order(wt2[,5]),];
write.table(wt1_order,file="result/final_module/DCM_DOWN_net.txt",quote=F,sep="\t",row.names=F,col.names=F);
write.table(wt2_order,file="result/final_module/DCM_UP_net.txt",quote=F,sep="\t",row.names=F,col.names=F);
##
M9[,1:10]
mat1 <- wt1[,c(3:4,6:7)]; rownames(mat1) <- apply(wt1[,c(5,1:2)],1,function(x)paste(x,collapse="_"));
mat2 <- wt2[,c(3:4,6:7)]; rownames(mat2) <- apply(wt2[,c(5,1:2)],1,function(x)paste(x,collapse="_"));
pdf("result/NORMAL.pdf",width=5,height=25);
pheatmap(mat1,cluster_rows=FALSE,cluster_cols=FALSE,fontsize_col=3);
dev.off();
pheatmap(mat1,cluster_rows=FALSE,cluster_cols=FALSE,fontsize_col=3);
dim(mat1)
dim(mat2)
pdf("result/DCM_DOWN.pdf",width=5,height=25);
pdf("result/DCM_DOWN_HEATMAP.pdf",width=5,height=25);
pheatmap(mat1,cluster_rows=FALSE,cluster_cols=FALSE,fontsize_col=3);
dev.off();
pdf("result/DCM_UP_HEATMAP.pdf",width=5,height=12);
pheatmap(mat2,cluster_rows=FALSE,cluster_cols=FALSE,fontsize_col=6);
dev.off();
pheatmap(mat2,cluster_rows=FALSE,cluster_cols=FALSE,fontsize_col=6);
diff_ID_mat
mat1 <- as.matrix(M6[names(M6)]);
a <- pheatmap(mat1,scale="column",cluster_rows=FALSE,cluster_cols=TRUE,clustering_distance_cols="correlation",border_color=NA,
annotation=t(diff_ID_mat),annotation_legend=TRUE,annotation_colors=cc1,cellwidth = 4.5, cellheight = 64,fontsize_col=6);
a<-pheatmap(mat1)
mat1
M6
mat1 <- as.matrix(M6[names(M6)]);
mat1
diff_ID_mat
M5
diff_ID
diff_ID_tmp <- matrix(0,ncol=length(all_use_ID),nrow=2); rownames(diff_ID_mat) <- names(diff_ID);colnames(diff_ID_mat)<-all_use_ID;
diff_ID_tmp
diff_ID_mat[1,which(all_use_ID %in% diff_ID$DCM_up)]
diff_ID_tmp[1,which(all_use_ID %in% diff_ID$DCM_up)]
M5[,DCM_up]
diff_ID$DCM_up
M5[,diff_ID$DCM_up]
diff_ID_mat
heatmap(diff_ID_mat)
pheatmap(diff_ID_mat)
a<-pheatmap(mat1,color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(100),cellwidth = 10, cellheight = 30,fontsize_col=5,cluster_rows=FALSE,cluster_cols=FALSE,show_rownames = T, show_colnames = T)
mat1
M5[,2]
M5[2,]
M5
M5[2,diff_ID]
p_DCM_up<-M5[2,diff_ID$DCM_up]
p_DCM_up
t(p_DCM_up)
p_DCM_down<-M5[2,diff_ID$DCM_down]
t(p_DCM_down)
tmp<-rbind(p_DCM_up,p_DCM_down)
tmp<-cbind(p_DCM_up,p_DCM_down)
tmp<-c(p_DCM_up,p_DCM_down)
tmp
row.names(mat1)
mat1_withP<-cbind(mat1,tmp)
pheatmap(mat1_withP)
a <- pheatmap(mat1_withP,scale="column",cluster_rows=FALSE,cluster_cols=TRUE,clustering_distance_cols="correlation",border_color=NA,
annotation=t(diff_ID_mat),annotation_legend=TRUE,annotation_colors=cc1,cellwidth = 4.5, cellheight = 64,fontsize_col=6);
?pheatmap
a<-pheatmap(mat1,cluster_rows = T,kmeans_k = 2)
a<-pheatmap(mat1,cluster_rows = T)
a<-pheatmap(mat1,cluster_rows = F)
a<-pheatmap(diff_ID_mat)
color
a<-pheatmap(diff_ID_mat,color = mat1_withP[,3])
mat1_withP[,3]
mat1_withP[3]
mat1_withP
a<-pheatmap(diff_ID_mat,color = mat1_withP[,2])
color
rbPal <- colorRampPalette(c('red','blue'))
Col <- rbPal(10)[as.numeric(cut(mat1_withP[,2],breaks = 10))]
Col
a<-pheatmap(diff_ID_mat,color = Col)
rbPal()
rbPal <- colorRampPalette(c('red','blue'))
rbPal()
rbPal
Col <- rbPal(1)[as.numeric(cut(mat1_withP[,2],breaks = 10))]
a<-pheatmap(diff_ID_mat,color = Col)
x <- ramp(seq.int(0, 1, length.out = n))
log10(mat1_withP[,2])
-log10(mat1_withP[,2])
log10p<--log10(mat1_withP[,2])
Col <- rbPal(10)[as.numeric(log10p,breaks = 10))]
a<-pheatmap(diff_ID_mat,color = Col)
log10p<--log10(mat1_withP[,2])
Col <- rbPal(10)[as.numeric(log10p,breaks = 10)]
a<-pheatmap(diff_ID_mat,color = Col)
swirl()
play()
?floor
nxt
nxt()
submit()
submit()
submit()
setwd("~/Desktop/R/R Markedown")
evaluate(sd,c(1.4,3.6,7,9,8,8))
evaluate(sd(),c(1.4,3.6,7,9,8,8))
evaluate(sd(),c(1.4,3.6,7.9,8,8))
evaluate(sd,c(1.4,3.6,7.9,8,8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[-1]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("lalaala")
play()
tmp<-function(...){args<-list(...);alpha<-args[["alpha"]];beta<-args[["beta"]];alpha+beta}
tmp("lalala")
tmp(c("a","b","c"))
list(c("a","b","c"))
args<-list(c("a","b","c"))
alpha<-args[["alpha"]]
alpha
args
args<-list(c("alpha","beta","c"))
alpha<-args[["alpha"]]
alpha
args<-list(c("alpha","beta","c"))
alpha<-args[["alpha"]]
alpha
beta<-args[["beta"]]
beta
alpha+beta
nxt()
submit()
submit()
mad_libs(c("UIC","singing","bread"))
submit()
"I" %p% "love" %p% R
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.tim())
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d,%Y %H:%M")
t4<-strptime(t3,"%B %d,%Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units="days")
ls
file.rename(from="/Users/xingewang/Downloads/rprog-data-specdata.zip",to="/Users/xingewang/Desktop/R/Coursera_R_programming/")
file.rename(from="/Users/xingewang/Downloads/rprog-data-specdata.zip",to="/Users/xingewang/Desktop/R/Coursera_R_programming/rprog-data-specdata.zip")
getwd()
setwd("/Users/xingewang/Desktop/R/Coursera_R_programming/")
dir.create("specdata")
dir()
file.rename("rprog-data-specdata.zip","specdata/rprog-data-specdata.zip"")
)
l
""
file.rename("rprog-data-specdata.zip","specdata/rprog-data-specdata.zip")
dir()
setwd("specdata")
dir()
unzip()
unzip("rprog-data-specdata.zip")
dir()
setwd("specdata")
dir()
head("300.csv")
a<-read.csv("300.csv")
heat(a)
head(a)
a<-read.csv(paste(1:2,".csv"))
a[1:2]<-read.csv(paste(1:2,".csv"))
paste(specdata,"/",1,".csv")
paste("specdata"","/",1,".csv")
paste("specdata","/",1,".csv")
paste("specdata","/",""",1,".csv")
paste("specdata"","/",1,".csv")
paste("specdata","/",1,".csv")
tmp<-paste("specdata","/",1,".csv")
a<-read.csv(tmp)
tmp<-paste("specdata","/",1,".csv")
tmp
tmp<-list.files(pattern = "*.csv")
tmp
tmp<-paste("specdata","/",1,".csv",sep="")
tmp
a<-read.csv(tmp)
setwd("/Users/xingewang/Desktop/R/Coursera_R_programming/")
dir()
a<-read.csv(tmp)
?list.files
list.files(path="specdata",pattern = 1:10.cvs)
list.files(path="specdata",pattern = "1:10.cvs")
list.files(path="specdata",pattern = "1.cvs")
list.files(path="specdata",pattern = 1".cvs")
tmp<-list.files(path="specdata",pattern = "*.csv")
for(i in 10:20) assign(tmp[i],read.csv(temp[i]))
for(i in 10:20) assign(tmp[i],read.csv(tmp[i]))
sprintf("%03.0f",1)
sprintf("%03.0f",1:10)
id<-sprintf("%03.0f",10:20)
for(i in id) assign(tmp[i],read.csv(tmp[i]))
id
tmp[1]
tmp<-list.files(path="specdata",pattern = "*.csv")
length(tmp)
tmp<-list.files(path="specdata",pattern = "*.csv")
tmp
tmp<-list.files(path="specdata",pattern = "*.csv")
dir()
tmp<-list.files(path="specdata/",pattern = "*.csv")
tmp
tmp<-list.files("specdata/",pattern = "*.csv")
tmp
tmp<-list.files("specdata/",pattern = "*.csv")
tmp
list.files("specdata/",pattern = "*.csv")
getwd()
list.files("specdata/")
setwd
setwd("specdata/")
tmp<-list.files("specdata/",pattern = "*.csv")
tmp
for(i in id) assign(tmp[i],read.csv(tmp[i]))
tmp[1]
?assign
dir()
tmp_dir<-paste("specdata","/",tmp,sep='')
tmp_dir[1]
for(i in id) assign(tmp[i],read.csv(tmp[i]))
a<-read.csv(tmp_dir[1])
a
for(i in 1:3) assign(tmp[i],read.csv(tmp[i]))
tmp<-list.files(directory,"*.csv")
tmp_dir<-paste(directory,"/",tmp,sep='')
id
1:id
for(i in id) print(id)
for(i in 1:length(id)) print(id)
for(i in 1:length(id)) print(id[i])
for(i in 1:length(id)) assign(tmp[id[i]],read.csv(tmp_dir[id[i]]))
tmp_dir[1]
tmp_dir[id[1]]
tmp_dir[20]
id=1:10
id
id[1]
id=10:20
for(i in length(id)){
assign(tmp[i],read.csv(tmp_dir[id[i]]))}
}
for(i in length(id)){
assign(tmp[i],read.csv(tmp_dir[id[i]]))
}
tmp
tmp[1]
id
for(i in length(id)){
assign(table[i],read.csv(tmp_dir[id[i]]))
}
read.csv(tmp_dir[id[2]])
table<-NULL
for(i in length(id)){
assign(table[i],read.csv(tmp_dir[id[i]]))
}
table<-NULL
for(i in length(id)){
table[i]<-read.csv(tmp_dir[id[i]])
}
i
table<-NULL
for(i in 1:length(id)){
table[i]<-read.csv(tmp_dir[id[i]])
}
table<-NULL
for(i in 1:length(id)){
assign(table[i],read.csv(tmp_dir[id[i]]))
}
for(i in 1:length(id)){
assign(tmp[i],read.csv(tmp_dir[id[i]]))
}
tmp[1]
head(tmp[1])
myfiles=lapply(tmp_dir[id],read.csv)
myfiles
myfiles[1]
head(myfiles[1])
class(myfiles)
myfiles[[1]]
args(myfiles)
myfiles=lapply(tmp_dir[id],read.csv)
id=10:13
directory<-"specdata"
tmp<-list.files(directory,"*.csv")
tmp_dir<-paste(directory,"/",tmp,sep='')
myfiles=lapply(tmp_dir[id],read.csv)
?list2env
myfiles[1]$Date
myfiles[[1]]$Date
myfiles[[1]]$Date[1:10]
myfiles$Date
myfiles[[1]]$sulfate[is.na(myfiles[[1]]$sulfate)]
mean(myfiles[[1]]$sulfate[!is.na(myfiles[[1]]$sulfate)])
length(myfiles)
mean(myfiles[[1:2]]$sulfate[!is.na(myfiles[[1:2]]$sulfate)])
cbind(myfiles[[1]]$sulfate[!is.na(myfiles[[1]]$sulfate)],myfiles[[2]]$sulfate[!is.na(myfiles[[2]]$sulfate)])
rbind(myfiles[[1]]$sulfate[!is.na(myfiles[[1]]$sulfate)],myfiles[[2]]$sulfate[!is.na(myfiles[[2]]$sulfate)])
tmp<-c(myfiles[[1]]$sulfate[!is.na(myfiles[[1]]$sulfate)],myfiles[[2]]$sulfate[!is.na(myfiles[[2]]$sulfate)])
length(tmp)
length(!is.na(myfiles[[1]]$sulfate))
sum(!is.na(myfiles[[1]]$sulfate))
sum(!is.na(myfiles[[2]]$sulfate))
148+443
pollutant<-"sulfate"
for(i in 1:length(myfiles)){
pollutant_each[i]<-myfiles[[i]]$pollutant[!is.na(myfiles[[i]]$pollutant)
}
for(i in 1:length(myfiles)){
pollutant_each[i]<-myfiles[[i]]$pollutant[!is.na(myfiles[[i]]$pollutant)
}
for(i in 1:length(myfiles)){
pollutant_each[i]<-myfiles[[i]]$pollutant[!is.na(myfiles[[i]]$pollutant)]
}
pollutant_each<-NULL
for(i in 1:length(myfiles)){
pollutant_each[i]<-myfiles[[i]]$pollutant[!is.na(myfiles[[i]]$pollutant)]
}
!is.na(myfiles[[1]]$pollutant)
myfiles[[1]]$Date
pollutant
myfiles[[1]]$pollutant
myfiles[[1]]$sulfate
class(myfiles[[1]]$sulfate)
as.factor(pollutant)
myfiles[[1]]$pollutant
mean(myfiles[[1]][,pollutant]
)
myfiles[[1]][,"sulfate"]
myfiles[[1]][,pollutant]
myfiles[[1]][[!is.na(myfiles[[1]][,pollutant],pollutant]
myfiles[[1]][[!is.na(myfiles[[1]][,pollutant]),pollutant]
]
myfiles[[i]][!is.na(myfiles[[i]][,pollutant],pollutant]
mean(myfiles[,pollutant],na.rm = TRUE)
files_full<-list.files(directory,full.names = TRUE)
files_full
dat<-data.frame()
dat
for(i in id){dat<-rbind(dat,read.csv(files_full[i]))}
dat
dim(dat)
View(dat)
mean(dat[,pollutant],na.rm = TRUE)
corr<-function(directory,threshold=0){
files_full<-list.files(directory,full.names = T)
dat<-vector(mode = "numeric",length=0)
for(i in 1:length(files_full)){
table_i<-read.csv(files_full[i])
csum<-sum((!is.na(table_i$sulfate)) & (!is.na(table_i$nitrate)))
if(csum > threshold){
tmp<-table_i[which(!is.na(table_i$sulfate)),]
subtable_i<-tmp[which(!is.na(tmp$nitrate)),]
dat<-c(dat,cor(subtable_i$sulfate,subtable_i$nitrate))
}
}
}
cr<-corr("specdata",150)
head(cr)
corr<-function(directory,threshold=0){
files_full<-list.files(directory,full.names = T)
dat<-vector(mode = "numeric",length=0)
for(i in 1:length(files_full)){
table_i<-read.csv(files_full[i])
csum<-sum((!is.na(table_i$sulfate)) & (!is.na(table_i$nitrate)))
if(csum > threshold){
tmp<-table_i[which(!is.na(table_i$sulfate)),]
subtable_i<-tmp[which(!is.na(tmp$nitrate)),]
dat<-c(dat,cor(subtable_i$sulfate,subtable_i$nitrate))
}
}
dat
}
cr<-corr("specdata",150)
head(cr)
getwd()
dir()
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
round(pollutantmean("specdata", "sulfate", 34),3)
round(pollutantmean("specdata", "nitrate"),3)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
?unlist
unlist(options())
a<-list(a=list(1:5,LETTERS(1:5)),b="Z",c=NA)
a<-list(a=list(1:5,LETTERS[1:5]),b="Z",c=NA)
A
a
unlist(a,recursive = FALSE)
unlist(a,recursive = TURE)
unlist(a,recursive = TRUE)
l2 <- list(a = "a", b = as.name("b"), c = pi+2i)
l2
l2 <- list(a = "a", b = as.name("bb"), c = pi+2i)
l2
unlist(l2)
ll <- list(as.name("sinc"), quote( a + b ), 1:10, letters, expression(1+x))
ll
utils::str(ll)
for(x in ll)
stopifnot(identical(x, unlist(x)))
x
